# ===============================================
# MODERN TMUX CONFIGURATION
# ===============================================

# ===============================================
# BASIC SETTINGS
# ===============================================

# Fix terminal colors and features
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -sa terminal-overrides ",ghostty:Tc"
set-option -g default-terminal "tmux-256color"

# Ensure proper shell is used
set-option -g default-shell "/bin/zsh"

# Faster command sequences
set -s escape-time 0
set -sg repeat-time 600

# Increase scrollback buffer
set -g history-limit 50000

# Enable focus events
set -g focus-events on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Enable aggressive resize
setw -g aggressive-resize on

# Activity monitoring
set -g monitor-activity on
set -g activity-action none

# ===============================================
# KEYBINDINGS - LEGENDARY-STYLE ORGANIZATION
# ===============================================

# Prefix key is set in default.nix and overridden at end of config

# ===============================================
# COMMAND PALETTE / LEGENDARY SYSTEM
# ===============================================

# Main command palette (like legendary in nvim)
bind-key Space display-popup -E -w 80% -h 80% '
  echo "=== TMUX COMMAND PALETTE ===" && \
  echo "" && \
  echo "ðŸ“‹ SESSIONS (C-Space s + key):" && \
  echo "  ss - Switch Session (FZF)" && \
  echo "  sn - New Session" && \
  echo "  sr - Rename Session" && \
  echo "  sk - Kill Session" && \
  echo "" && \
  echo "ðŸªŸ WINDOWS (C-Space w + key):" && \
  echo "  wn - New Window" && \
  echo "  wr - Rename Window" && \
  echo "  wk - Kill Window" && \
  echo "  wl - List Windows" && \
  echo "" && \
  echo "ðŸ”² PANES (C-Space p + key):" && \
  echo "  p| - Split Vertical" && \
  echo "  p- - Split Horizontal" && \
  echo "  pk - Kill Pane" && \
  echo "  pz - Zoom Pane" && \
  echo "  pr - Resize Mode (then h/j/k/l)" && \
  echo "" && \
  echo "ðŸ”§ UTILITIES (C-Space f + key):" && \
  echo "  ff - Find File" && \
  echo "  fu - Find URL" && \
  echo "  fc - Copy Mode" && \
  echo "  fl - Show Logs" && \
  echo "  fr - Reload Config" && \
  echo "" && \
  echo "ðŸ’¡ DIRECT SHORTCUTS:" && \
  echo "  C-Space c - New Window (direct)" && \
  echo "  C-Space | - Split Vertical (direct)" && \
  echo "  C-Space - - Split Horizontal (direct)" && \
  echo "" && \
  echo "Press any key to close..." && \
  read -n 1
'

# FZF Integration Menu (changed to F to avoid conflict with multi-key f)
bind-key F display-popup -E -w 80% -h 80% '
  choice=$(echo "Switch Session\nNew Session\nKill Session\nFind Window\nFind Pane\nShow URLs\nShow Files\nShow Processes" | fzf --prompt="FZF Menu: " --height=40% --layout=reverse --border) && \
  case "$choice" in
    "Switch Session") tmux display-popup -E "tmux list-sessions | sed \"s/:.*$//\" | grep -v \"^$(tmux display-message -p \"#S\")$\" | fzf --reverse | xargs tmux switch-client -t" ;;
    "New Session") tmux command-prompt -p "New Session Name:" "new-session -A -s \"%%\"" ;;
    "Kill Session") tmux display-popup -E "tmux list-sessions | sed \"s/:.*$//\" | fzf --prompt=\"Kill Session: \" --reverse | xargs tmux kill-session -t" ;;
    "Find Window") tmux display-popup -E "tmux list-windows -F \"#I: #W\" | fzf --reverse | cut -d: -f1 | xargs tmux select-window -t" ;;
    "Show URLs") tmux run-shell "~/.tmux/plugins/tmux-fzf/scripts/url.sh" ;;
    "Show Files") tmux display-popup -E "find . -type f | fzf --preview=\"bat --color=always {}\" --height=80%" ;;
    "Show Processes") tmux display-popup -E "ps aux | fzf --header-lines=1 --reverse" ;;
  esac
'

# ===============================================
# SESSION MANAGEMENT
# ===============================================

# Session operations
bind-key s display-popup -E "tmux list-sessions | sed 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse --prompt='Switch to session: ' | xargs tmux switch-client -t"
bind-key S command-prompt -p "New Session:" "new-session -A -s '%%'"
bind-key X confirm-before -p "Kill session #S? (y/n)" kill-session
bind-key R command-prompt -I "#S" -p "Rename session:" "rename-session '%%'"

# Quick session switching (Alt + number)
bind-key -n M-1 if-shell 'tmux has-session -t 1' 'switch-client -t 1'
bind-key -n M-2 if-shell 'tmux has-session -t 2' 'switch-client -t 2'
bind-key -n M-3 if-shell 'tmux has-session -t 3' 'switch-client -t 3'
bind-key -n M-4 if-shell 'tmux has-session -t 4' 'switch-client -t 4'
bind-key -n M-5 if-shell 'tmux has-session -t 5' 'switch-client -t 5'

# ===============================================
# WINDOW MANAGEMENT
# ===============================================

# Window operations (no conflicts with shell commands)
bind-key c new-window -c "#{pane_current_path}"
bind-key w choose-window
bind-key n next-window
bind-key p previous-window
bind-key & confirm-before -p "Kill window #W? (y/n)" kill-window

# Window navigation with Alt
bind-key -n M-h previous-window
bind-key -n M-l next-window

# Window reordering
bind-key -r < swap-window -t -1\; select-window -t -1
bind-key -r > swap-window -t +1\; select-window -t +1

# ===============================================
# MULTI-KEY BINDINGS FOR COMMAND PALETTE
# ===============================================

# Session management multi-key bindings
bind-key s switch-client -T session-table
bind-key -T session-table s display-popup -E "tmux list-sessions | sed 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse --prompt='Switch to session: ' | xargs tmux switch-client -t"
bind-key -T session-table n command-prompt -p "New Session:" "new-session -A -s '%%'"
bind-key -T session-table r command-prompt -I "#S" -p "Rename session:" "rename-session '%%'"
bind-key -T session-table k confirm-before -p "Kill session #S? (y/n)" kill-session

# Window management multi-key bindings  
bind-key w switch-client -T window-table
bind-key -T window-table n new-window -c "#{pane_current_path}"
bind-key -T window-table r command-prompt -I "#W" -p "Rename window:" "rename-window '%%'"
bind-key -T window-table k confirm-before -p "Kill window #W? (y/n)" kill-window
bind-key -T window-table l choose-window

# Pane management multi-key bindings
bind-key p switch-client -T pane-table  
bind-key -T pane-table '|' split-window -h -c "#{pane_current_path}"
bind-key -T pane-table '-' split-window -v -c "#{pane_current_path}"
bind-key -T pane-table k confirm-before -p "Kill pane? (y/n)" kill-pane
bind-key -T pane-table z resize-pane -Z
bind-key -T pane-table r switch-client -T resize-table

# Resize mode bindings
bind-key -T resize-table h resize-pane -L 5
bind-key -T resize-table j resize-pane -D 5  
bind-key -T resize-table k resize-pane -U 5
bind-key -T resize-table l resize-pane -R 5
bind-key -T resize-table H resize-pane -L 10
bind-key -T resize-table J resize-pane -D 10
bind-key -T resize-table K resize-pane -U 10
bind-key -T resize-table L resize-pane -R 10

# Utility multi-key bindings
bind-key f switch-client -T find-table
bind-key -T find-table f display-popup -E -w 80% -h 60% 'find . -type f | fzf --preview="bat --color=always {}" --height=80%'
bind-key -T find-table u run-shell "~/.tmux/plugins/tmux-fzf/scripts/url.sh"
bind-key -T find-table c copy-mode
bind-key -T find-table l show-messages
bind-key -T find-table r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# ===============================================
# PANE MANAGEMENT
# ===============================================

# Pane splitting (intuitive symbols)
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Pane navigation (vim-style)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Pane resizing
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Pane operations
bind-key z resize-pane -Z
bind-key x confirm-before -p "Kill pane? (y/n)" kill-pane
bind-key ! break-pane
bind-key @ join-pane -h -s !

# ===============================================
# COPY MODE AND CLIPBOARD
# ===============================================

# Enter copy mode
bind-key [ copy-mode
bind-key ] paste-buffer

# Vi-style copy mode bindings
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'
bind-key -T copy-mode-vi Escape send -X cancel

# Mouse copy integration
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'

# ===============================================
# SEARCH AND NAVIGATION
# ===============================================

# Search in scrollback
bind-key / copy-mode \; command-prompt -i -p "(search up)" "send-keys -X search-backward-incremental '%%%'"
bind-key ? copy-mode \; command-prompt -i -p "(search down)" "send-keys -X search-forward-incremental '%%%'"

# ===============================================
# UTILITY KEYBINDINGS
# ===============================================

# Reload configuration
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Clear screen and history
bind-key C-l send-keys 'clear' \; send-keys 'Enter' \; clear-history

# Toggle mouse mode
bind-key m set-option -g mouse \; display-message "Mouse: #{?mouse,ON,OFF}"

# Toggle status bar
bind-key t set-option -g status \; display-message "Status: #{?status,ON,OFF}"

# Show key bindings
bind-key ? list-keys

# ===============================================
# PLUGIN CONFIGURATIONS
# ===============================================

# Catppuccin theme settings
set -g @catppuccin_flavour 'macchiato'
set -g @catppuccin_window_tabs_enabled on
set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M"
set -g @catppuccin_user "on"
set -g @catppuccin_host "on"

# Session persistence settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# Continuum settings (auto-save sessions)
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @continuum-boot 'on'

# FZF settings
set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'

# Battery settings
set -g @batt_icon_status_charged 'ðŸ”‹'
set -g @batt_icon_status_charging 'âš¡'
set -g @batt_icon_status_discharging 'ðŸª«'

# Prefix highlight settings
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_sync_prompt 'Sync'

# ===============================================
# OVERRIDE PLUGIN DEFAULTS (must be after plugins)
# ===============================================

# Ensure our custom prefix key is used (plugins like sensible may override)
set -g prefix 'C-Space'
unbind C-b
bind-key 'C-Space' send-prefix

# Override sensible plugin's default-command to use the correct shell
set-option -g default-command ""

# ===============================================
# STATUS LINE CONFIGURATION
# ===============================================

# Status line settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

# Custom status line (will be overridden by catppuccin)
set -g status-left '#[fg=blue,bold]#S #[fg=white]| '
set -g status-right '#{prefix_highlight} #{battery_status_bg} #{battery_icon} #{battery_percentage} | %a %Y-%m-%d %H:%M'

# Window status format
set -g window-status-format ' #I #W '
set -g window-status-current-format ' #I #W '

# ===============================================
# MOUSE CONFIGURATION
# ===============================================

# Enhanced mouse support
set -g mouse on

# Mouse bindings for pane selection
bind-key -n MouseDown1Pane select-pane -t=\; send-keys -M
bind-key -n MouseDown1Status select-window -t=
bind-key -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= "#{pane_in_mode}" "copy-mode -M" "send-keys -M"' 'copy-mode -M'

# ===============================================
# PROJECT INTEGRATION
# ===============================================

# Quick project switching (integrates with your Nix projects)
bind-key P display-popup -E -w 80% -h 60% '
  project=$(find ~/Projects -maxdepth 1 -type d -not -path "*/.*" | sed "s|.*/||" | sort | fzf --prompt="Switch to project: " --height=40% --layout=reverse --border) && \
  session_name=$(echo "$project" | tr "." "_") && \
  tmux new-session -A -s "$session_name" -c "$HOME/Projects/$project"
'

# ===============================================
# DEVELOPMENT HELPERS
# ===============================================

# Git integration
bind-key g display-popup -E -w 80% -h 80% '
  cd "#{pane_current_path}" && \
  git status 2>/dev/null || echo "Not a git repository" && \
  echo "" && \
  echo "Git shortcuts:" && \
  echo "  git log --oneline -10" && \
  echo "  git status" && \
  echo "  git diff" && \
  echo "" && \
  echo "Press Enter to continue..." && \
  read
'

# Quick command execution
bind-key ! command-prompt -p "Command:" "new-window 'cd #{pane_current_path}; %%'"

# ===============================================
# HELP SYSTEM
# ===============================================

# Help menu
bind-key F1 display-popup -E -w 80% -h 80% '
  echo "=== TMUX HELP ===" && \
  echo "" && \
  echo "ðŸš€ QUICK START:" && \
  echo "  C-Space Space  - Command Palette" && \
  echo "  C-Space F      - FZF Menu" && \
  echo "  C-Space s      - Switch Session" && \
  echo "  C-Space |      - Split Vertical" && \
  echo "  C-Space -      - Split Horizontal" && \
  echo "" && \
  echo "ðŸªŸ WINDOW OPERATIONS:" && \
  echo "  C-Space w n    - New Window" && \
  echo "  C-Space w r    - Rename Window" && \
  echo "  C-Space w k    - Kill Window" && \
  echo "  C-Space w l    - List Windows" && \
  echo "" && \
  echo "ðŸ”§ UTILITIES:" && \
  echo "  C-Space r      - Reload Config" && \
  echo "  C-Space m      - Toggle Mouse" && \
  echo "  C-Space t      - Toggle Status" && \
  echo "  C-Space P      - Project Switcher" && \
  echo "" && \
  echo "ðŸ“š MORE HELP:" && \
  echo "  C-Space ?      - Show All Keybindings" && \
  echo "  C-Space F1     - This Help" && \
  echo "" && \
  echo "Press any key to close..." && \
  read -n 1
'
